
							    
							}
							finally {
							    if (out2 != null) out2.close();
							}
							
							
							PrintStream out3 = null;
							try {
							    out3 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"4"+".txt"));
							    out3.print(sp4);
							    
							}
							finally {
							    if (out3 != null) out3.close();
							}
							
							PrintStream out4 = null;
							try {
							    out4 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"5"+".txt"));
							    out4.print(sp5);
							    
							}
							finally {
							    if (out4 != null) out4.close();
							}
							
							
							
							
							JOptionPane.showMessageDialog(null, "Data Uploaded Successfully");
						
					}
				} catch (Exception e23) {
					e23.printStackTrace();
				}
			} 
		
						if(this.port==4545)
						{
					
							try
							{
								ServerSocket server909 = new ServerSocket(4545);
								Socket con777;
								while (true) 
								{
								con777 = server909.accept();
								
								DataInputStream dis = new DataInputStream(con777.getInputStream());
								
								String email	= dis.readUTF();
								String name	= dis.readUTF();
								String pass	= dis.readUTF();
								String age	= dis.readUTF();
								String gender	= dis.readUTF();
								String country	= dis.readUTF();
								
								ResultSet r1=connect.createStatement().executeQuery("insert into register values('"+email+"','"+name+"','"+pass+"','"+age+"','"+gender+"','"+country+"')");
								
								if(r1.next()==true)
								{
									DataOutputStream dos1 = new DataOutputStream(con777.getOutputStream());
									dos1.writeUTF("reg");
								}
								
								}
							}catch (Exception e) {
								
							}
						}	
		 if(this.port==1011)
			{
				try
				{
					ServerSocket server909 = new ServerSocket(1011);
					Socket con777;
					while (true) 
					{
					con777 = server909.accept();
					
					DataInputStream dis = new DataInputStream(con777.getInputStream());
					
					String user	= dis.readUTF();
					String pass	= dis.readUTF();
					ResultSet r1=connect.createStatement().executeQuery("select * from register where name='"+user+"' and password='"+pass+"'");
					
					if(r1.next()==true)
					{
						DataOutputStream dos1 = new DataOutputStream(con777.getOutputStream());
						dos1.writeUTF("yes");
					}
					
					}
				}catch (Exception e) {
					
				}
			}	
		 if(this.port==3333)
			{

				try
				{
					ServerSocket server909 = new ServerSocket(3333);
					Socket con777;
					while (true) 
					{
					con777 = server909.accept();
					
					DataInputStream dis = new DataInputStream(con777.getInputStream());
					
					String user	= dis.readUTF();
					String file = dis.readUTF();
					String sk	= dis.readUTF();
					ResultSet r1=connect.createStatement().executeQuery("select * from cloudfiles where filename='"+file+"' and secretkey='"+sk+"'");
					
					if(r1.next()==true)
					{
						String cname = "CloudServer\\";
						MergeFile mf = new MergeFile();
						mf.mergeFiles(file, cname);
						
						FileInputStream fs = new FileInputStream("CloudServer\\" + file + "x.txt");
						byte bs1[] = new byte[fs.available()];
						fs.read(bs1);
						String content = new String(bs1);
					 
						  DataOutputStream  ds = new DataOutputStream(con777.getOutputStream());
							
						   ds.writeUTF(content);
						   ds.writeUTF("success");
						
						
					}
					if(r1.next()==false)
					{
						SimpleDateFormat sd = new SimpleDateFormat();
						
						String dt=sd.format("dd/mm/yy");
						
						int r12=connect.createStatement().executeUpdate("insert into Attacker values('"+file+"','"+user+"','"+sk+"