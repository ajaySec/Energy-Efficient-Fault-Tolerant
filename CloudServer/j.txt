import java.awt.Color;
import java.awt.Container;
import java.awt.Font;
import java.awt.Menu;
import java.awt.MenuBar;
import java.awt.MenuItem;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectOutputStream;
import java.io.PrintStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Vector;

import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.Timer;
import javax.swing.border.Border;

public class CloudServer implements ActionListener {
	JFrame jf;
	Container c;
	JLabel l1, l2, l3, l4, l5, l6, l7, l8, l9, l10, l11, l12;
	JPanel p1, p2;
	JButton b1, b2, b3, b4;
	JScrollPane sp;
	JTextArea ta;
	JTextField t1;
	MenuBar mbr;
	Menu file;
	MenuItem  item2, users,exit;
	Border b11, b22, b33;
	JScrollPane pane;
	String Scheme1, rank;
	String f1 = "", f2 = "", f3 = "", f4 = "", f5 = "", f6 = "", f7 = "",f8 = "";
	int count = 0;
	Timer timer;
	public Font f = new Font("Times new roman", Font.BOLD, 18);

	JLabel mg1, mg2, mg3, mg4, mg5, mg6, mg7, mg8, mg9, mg10, g11, g22, g33,
			g44, g55, g66, g77;
	ImageIcon g1, g2, g3, g4, g5, g6, g7;
	String keyWord = "ef50a0ef2c3e3a5fdf803ae9752c8c66";

	CloudServer() {
		jf = new JFrame("Cloud Server::");
		c = jf.getContentPane();
		c.setLayout(null);
		
		c.setBackground(Color.WHITE);
		timer = new Timer(0, null);

		

		ImageIcon banner = new ImageIcon(this.getClass().getResource("images/server.png"));
		JLabel title = new JLabel();
		title.setIcon(banner);
		title.setBounds(0, 0,  770,590);

		t1 = new JTextField(15);
		Border b22 = BorderFactory.createBevelBorder(0);
		l2 = new JLabel();
		l2.setBorder(b22);
		
		b1 = new JButton("View Owner Files");
		b1.setForeground(Color.BLACK);
		b1.addActionListener(this);

		mbr = new MenuBar();
		file = new Menu("File");
		item2 = new MenuItem("Add Data Creator");
		users = new MenuItem("View Attackers");
		exit = new MenuItem("Exit");
		item2.addActionListener(this);
		users.addActionListener(this);
		exit.addActionListener(this);
		file.add(item2);
		file.add(users);
		
		file.add(exit);
		mbr.add(file);
		jf.setMenuBar(mbr);

		c.add(l2);
		
		c.add(title);
		b1.setBounds(250, 500, 200, 30);
		c.add(b1);
		jf.setBounds(0, 0, 770,650);
		jf.show();

		int[] ports = new int[] { 2424,4545,1011,3333,4444,3434};
		
		for (int i = 0; i < 6; i++) {
			Thread t2 = new Thread(new PortListener(ports[i]));
			t2.start();
		}
	}

	public static void main(String args[])
	{
		new CloudServer();
	}
	public void actionPerformed(ActionEvent e) {
		Object o = e.getSource();
				
		if (o == b1) {
			
			try{
			Vector heading = new Vector();
			
			heading.addElement("Owner Name");
			heading.addElement("File Name");
			heading.addElement("Secret Key");
		
			Vector data = new Vector();

			String query = "SELECT * FROM cloudfiles";

			
			Dbcon db=new Dbcon();
			Connection con = db.getConnection();
			Statement stmt = con.createStatement();
			
			ResultSet rs =stmt.executeQuery(query);
			
			

			ResultSetMetaData rsm = rs.getMetaData();
			int col = rsm.getColumnCount();

			while (rs.next()) {
				Vector row = new Vector();
				for (int i = 1; i <= col; i++) {
					row.addElement(rs.getObject(i));

				}

				data.addElement(row);
			}

			JTable table = new JTable(data, heading);

			JScrollPane pane = new JScrollPane(table);

			pane.setBounds(50,100,650,250);
			c.add(pane);

		} catch (Exception ex) {
			ex.printStackTrace();
	}
		}
		if (o == item2) {
			
			try{
				Dbcon db=new Dbcon();
				Connection con = db.getConnection();
				Statement stmt = con.createStatement();
				
				String owner = JOptionPane.showInputDialog(null, "Enter Data Creator");
				String assign = JOptionPane.showInputDialog(null, "Enter Number Of Tasks");
				
				int task=0;
				String query = "insert into koutn values('"+owner+"','" +assign+ "','" +task+ "')";	
				stmt.executeUpdate(query);
				
				JOptionPane.showMessageDialog(null, "Tasks Assigned Successfully");
				
				}catch (Exception e5) {
					// TODO: handle exception
				}
			}
			

		if (o == users) {
			
			ViewAttacker v =new ViewAttacker();
			v.setSize(500, 500);
			v.setVisible(true);
		}
		
		if(o == exit)
		{
			System.exit(0);
		}
	}

	class PortListener implements Runnable {
		
		int port;

		public PortListener(int port) {
			this.port = port;
		}

		public void run() {
			try{
			Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
			Dbcon db=new Dbcon();
			Connection connect=db.getConnection();
			connect = DriverManager.getConnection("jdbc:odbc:K-anonimity");
			
			 
		 if (this.port == 2424) {
			 
				try {
					ServerSocket sc01, sc02, sc03, sc04, sc11, sc12;
					Socket cn01, cn02, cn03, cn04, cn05, cn1, cn2;
					
					sc02 = new ServerSocket(2424);

						String oname,filename,sk,ct;
						String sp1,sp2,sp3,sp4,sp5;
						String h1,h2,h3,h4,h5;
						String tym;
						
					while (true) {
						cn02 = sc02.accept();
						
						
						Statement stmt = connect.createStatement();
						DataInputStream dis = new DataInputStream(cn02.getInputStream());
						
						oname	= dis.readUTF();
						filename	= dis.readUTF();
						sk		= dis.readUTF();
						ct=dis.readUTF();
					
						sp1 = dis.readUTF();
						sp2 = dis.readUTF();
						sp3 = dis.readUTF();
						sp4 = dis.readUTF();
						sp5 = dis.readUTF();

						
						h1 = dis.readUTF();
						h2 = dis.readUTF();
						h3 = dis.readUTF();
						h4 = dis.readUTF();
						h5 = dis.readUTF();
						tym = dis.readUTF();

						
						 int len = filename.length();
						 String fname = filename.substring(0, len-5);
						
							
							
							String query = "insert into cloudfiles values('"+oname+"','" +fname+ "','" +sk+ "','"+h1+"','"+h2+"','"+h3+"','"+h4+"','"+h5+"','"+tym+"')";	
							stmt.executeUpdate(query);
				
	
							PrintStream out99 = null;
							try {
							    out99 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+".txt"));
							    out99.print(ct);
							    
							    
							}
							finally {
							    if (out99 != null) out99.close();
							}
							
							PrintStream out = null;
							try {
							    out = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"1"+".txt"));
							    out.print(sp1);
							    
							    
							}
							finally {
							    if (out != null) out.close();
							}
							
							PrintStream out1 = null;
							try {
							    out1 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"2"+".txt"));
							    out1.print(sp2);
							    
							}
							finally {
							    if (out1 != null) out1.close();
							}
							
							PrintStream out2 = null;
							try {
							    out2 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"3"+".txt"));
							    out2.print(sp3);
							    
							}
							finally {
							    if (out2 != null) out2.close();
							}
							
							
							PrintStream out3 = null;
							try {
							    out3 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"4"+".txt"));
							    out3.print(sp4);
							    
							}
							finally {
							    if (out3 != null) out3.close();
							}
							
							PrintStream out4 = null;
							try {
							    out4 = new PrintStream(new FileOutputStream("CloudServer\\"+fname+"5"+".txt"));
							    out4.print(sp5);
							    
							}
							finally {
							    if (out4 != null) out4.close();
							}
							
							
							
							
							JOptionPane.showMessageDialog(null, "Data Uploaded Successfully");
						
					}
				} catch (Exception e23) {
					e23.printStackTrace();
				}
			} 
		
						if(this.port==4545)
						{
					
							try
							{
								ServerSocket server909 = new ServerSocket(4545);
								Socket con777;
								while (true) 
								{
								con777 = server909.accept();
								
								DataInputStream dis = new DataInputStream(con777.getInputStream());
								
								String email	= dis.readUTF();
								String name	= dis.readUTF();
								String pass	= dis.readUTF();
								String age	= dis.readUTF();
								String gender	= dis.readUTF();
								String country	= dis.readUTF();
								
								ResultSet r1=connect.createStatement().executeQuery("insert into register values('"+email+"','"+name+"','"+pass+"','"+age+"','"+gender+"','"+country+"')");
								
								if(r1.next()==true)
								{
									DataOutputStream dos1 = new DataOutputStream(con777.getOutputStream());
									dos1.writeUTF("reg");
								}
								
								}
							}catch (Exception e) {
								
							}
						}	
		 if(this.port==1011)
			{
				try
				{
					ServerSocket server909 = new ServerSocket(1011);
					Socket con777;
					while (true) 
					{
					con777 = server909.accept();
					
					DataInputStream dis = new DataInputStream(con777.getInputStream());
					
					String user	= dis.readUTF();
					String pass	= dis.readUTF();
					ResultSet r1=connect.createStatement().executeQuery("select * from register where name='"+user+"' and password='"+pass+"'");
					
					if(r1.next()==true)
					{
						DataOutputStream dos1 = new DataOutputStream(con777.getOutputStream());
						dos1.writeUTF("yes");
					}
					
					}
				}catch (Exception e) {
					
				}
			}	
		 if(this.port==3333)
			{

				try
				{
					ServerSocket server909 = new ServerSocket(3333);
					Socket con777;
					while (true) 
					{
					con777 = server909.accept();
					
					DataInputStream dis = new DataInputStream(con777.getInputStream());
					
					String user	= dis.readUTF();
					String file = dis.readUTF();
					String sk	= dis.readUTF();
					ResultSet r1=connect.createStatement().executeQuery("select * from cloudfiles where filename='"+file+"' and secretkey='"+sk+"'");
					
					if(r1.next()==true)
					{
						String cname = "CloudServer\\";
						MergeFile mf = new MergeFile();
						mf.mergeFiles(file, cname);
						
						FileInputStream fs = new FileInputStream("CloudServer\\" + file + "x.txt");
						byte bs1[] = new byte[fs.available()];
						fs.read(bs1);
						String content = new String(bs1);
					 
						  DataOutputStream  ds = new DataOutputStream(con777.getOutputStream());
							
						   ds.writeUTF(content);
						   ds.writeUTF("success");
						
						
					}
					if(r1.next()==false)
					{
						SimpleDateFormat sd = new SimpleDateFormat();
						
						String dt=sd.format("dd/mm/yy");
						
						int r12=connect.createStatement().executeUpdate("insert into Attacker values('"+file+"','"+user+"','"+sk+"''"+dt+"')");
						DataOutputStream  ds = new DataOutputStream(con777.getOutputStream());
						
						   ds.writeUTF("no");
						   ds.writeUTF("no");
					}
					
					}
				}catch (Exception e) {
					
				}
			}	
		 
		 if(this.port==3434)
			{
		
				try
				{
					ServerSocket server909 = new ServerSocket(3434);
					Socket con777;
					while (true) 
					{
					con777 = server909.accept();
					
					DataInputStream dis = new DataInputStream(con777.getInputStream());
					
					String file	= dis.readUTF();
					
					
					ResultSet r1=connect.createStatement().executeQuery("select * from cloudfiles where filename='"+file+"'");
					
					if(r1.next()==true)
					{
						String k= r1.getString(3);
						
						DataOutputStream dos1 = new DataOutputStream(con777.getOutputStream());
						
						dos1.writeUTF("key");
						dos1.writeUTF(k);
						
					}
					if(r1.next()==false)
					{
						DataOutputStream dos1 = new DataOutputStream(con777.getOutputStream());
						dos1.writeUTF("no");
						dos1.writeUTF("no");
						
					}
					
					}
				}catch (Exception e) {
					
				}
			}
		}catch (Exception e) {
			// TODO: handle exception
		}
	}
	}
	}
	
